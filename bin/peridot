#!/usr/bin/env php
<?php

use Peridot\Core\SpecResult;
use Peridot\Runner\Runner;
use Peridot\Runner\SuiteLoader;
use Peridot\Runner\Context;

$autoload = null;
if (file_exists(__DIR__ . '/../vendor/autoload.php')) {
    // peridot is in [project]/bin/
    $autoload = realpath(__DIR__ . '/../vendor/autoload.php');
} elseif (file_exists(__DIR__ . '/../autoload.php')) {
    // peridoot is in [project]/vendor/bin
    $autoload = realpath(__DIR__ . '/../autoload.php');
}

if (!$autoload) {
    die(
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

require_once $autoload;

if (!isset($argv[1])) {
    print 'Please specify a spec directory.' . PHP_EOL;
    exit(1);
}

$specDirectory = $argv[1];
if (!file_exists(getcwd() . '/' . $specDirectory)) {
    print $argv[1] . ' is not a directory.  Please specify a valid spec directory' . PHP_EOL;
    exit(1);
}

// todo - we are going to need to know how to find the bootstrap when installed as a library in another project
require_once 'bootstrap.php';

$loader = new SuiteLoader();
$loader->load($specDirectory);
$result = new SpecResult();
$runner = new Runner(Context::getInstance()->getCurrentSuite());
$runner->run($result);
print $result->getSummary() . PHP_EOL;

if ($result->getFailureCount() > 0) {
    exit(1);
}

exit(0);
